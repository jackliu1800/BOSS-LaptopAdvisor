package laptopAdvisor;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;

public class LaptopAdvisorGUI extends JFrame implements ActionListener{

	//fields(move all the jpanel, label buttons up to here to declare please
	private Laptop[] laptopArray;

	//Panel setup fields
	
	//RadioButton setup fields
	JLabel[] radioButtonTitleArray = new JLabel[2];

	JButton[] budgetRadioButton = new JButton[2];
	JButton[] screenSizeRadioButton = new JButton[2];
	JButton[] weightRadioButton = new JButton[2];


	//

	//create a new user
	User user = new User();

	//frame and frame menu elements

	//user panel and user panel elements
	JPanel userPanel = new JPanel();//frame
	JLabel userPanelTitle = new JLabel("User Panel");//title
	


	//elements to fill the weightings array - labels and comboboxes

	//create report button
	JButton createReportButton = new JButton("Create Report");//Create report button

	//report panel and report panel elements
	
	//list of laptops


	//list of the index of top 3 laptops


	/*
	 * A constructor method that reads in the full laptop list and sets up the user panel,
	 * report panel and frame
	 *
	 *  author - Jack
	 */
	public LaptopAdvisorGUI(Laptop[] laptopArray) {

		//setup 30 laptops
		this.laptopArray = laptopArray;

		//call the 3 methods
		userPanelSetup();
		reportPanelSetup();
		frameSetup();


	}



	/*
	 * is method setups up the user panel for inputting their subjective ratings and weightings
	 *
	 * author - Jack
	 */
	private void userPanelSetup() {



		//set everything up
		//(x,y,width,height)
		LaptopAdvisorGUI.add(userPanel);
		userPanel.setBounds(0, 0, 1600, 800);
		userPanel.setLayout(null);
		userPanel.add(userPanelTitle);
		userPanel.add(createReportButton);

		userPanelTitle.setBounds(400, 200, 1000, 200);

		createReportButton.setBounds(800, 1300, 1000, 200);
		createReportButton.addActionListener(this);//when clicked, call ActionPerformed

		//call rating and radiobutton setup methods.
		setupRadioButtons();
		setupWeightings();

	}




	/*
	 * This method sets up the radio buttons
	 *
	 * author - Jack
	 */
	private void setupRadioButtons() {


		radioButtonTitleArray[0].setName("Budget");
		radioButtonTitleArray[1].setName("Screen Size");
		radioButtonTitleArray[2].setName("Weight");




		for(int i = 0; i < 3; i++){

			//setup title of button groups
			userPanel.add(radioButtonTitleArray[i]);

			//x,y,width,height
			radioButtonTitleArray[i].setBounds(i+1*300, 800, 200, 100);
			if(i == 0){
				//place budget
				for (int c = 0; c < 3; c++){
					userPanel.add(budgetRadioButton[c]);
					budgetRadioButton[c].setBounds(radioButtonTitleArray[i].getX(), 700-c*100, 200, 100);
					budgetRadioButton[c].addActionListener(this);
				}

			} else if(i == 1){
				//place screen size
				for (int c = 0; c < 3; c++){
					userPanel.add(screenSizeRadioButton[c]);
					screenSizeRadioButton[c].setBounds(radioButtonTitleArray[i].getX(), 700-c*100, 200, 100);
					screenSizeRadioButton[c].addActionListener(this);
				}
			} else if(i == 2){

				for (int c = 0; c < 3; c++){
					userPanel.add(weightRadioButton[c]);
					weightRadioButton[c].setBounds(radioButtonTitleArray[i].getX(), 700-c*100, 200, 100);
					weightRadioButton[c].addActionListener(this);
				}
			}

		}





	}

	/*
	 * This method handles all the actions that may occur on the GUI - menus, radio buttons, combo 
	 * boxes, report button, laptop image buttons
	 *
	 * author - Jack
	 */
	public void actionPerformed(ActionEvent event) {

		if(event.getSource() == userMenuItem){
			userPanel.setVisible(true);
			reportPanel.setVisible(false);
		}

		else if(event.getSource() == budgetRadioButton){
			for(int i = 0; i < 3; i++){
				if(event.getSource() == budgetRadioButton[i])
				user.setBudgetRating(i);
			}		
		}
		
		else if(event.getSource() == screenSizeRadioButton){
			for(int i = 0; i < 3; i++){
				if(event.getSource() == screenSizeRadioButton[i])
				user.setScreensizeRating(i);	 ;
			}		
		}
		
		else if(event.getSource() == weightRadioButton){
			for(int i = 0; i < 3; i++){
				if(event.getSource() == weightRadioButton[i])
				user.setWeightRating(i);
			}		
		}
			
				
		else if(event.getSource() == cpuComboBox){
			
			cpuComboBox.getSelectedIndex;
			for(int i = 0; i < 10; i++){	
				
				if(event.getSource() == cpuComboBox[i])
				user.setCpuRating(i);
			}	
		}
		
		else if(event.getSource() == gpuComboBox){
			
			gpuComboBox.getSelectedIndex;
			for(int i = 0; i < 10; i++){
				
				if(event.getSource() == gpuComboBox[i])
				user.setGpuRating(i);	
			}	
		}
		
		else if(event.getSource() == ramComboBox){
			
			ramComboBox.getSelectedIndex;
			for(int i = 0; i < 10; i++){
				
				if(event.getSource() == ramComboBox[i])
				user.setRamRating(i);
			}	
		}
			
			
		else if(event.getSource() == reportButton){
			
			createReport();
			
		}
		
		else if(event.getSource() == hyperlinksArray){
			for(int i = 0; i < 3; i++){
				if (event.getSource() == hyperlinksArray[i]);
					openWebBrowser(i);
			}
			
		}


}




		private void frameSetup() {
			// TODO Auto-generated method stub

		}

		private void reportPanelSetup() {
			// TODO Auto-generated method stub

		}

		private void setupWeightings() {
			// TODO Auto-generated method stub

		}








	}


